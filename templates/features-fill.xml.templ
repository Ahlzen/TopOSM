<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map[
    <!ENTITY % utils SYSTEM "include/utils.inc">
    <!ENTITY % colors SYSTEM "include/colors.inc">
    <!ENTITY symbolsdir "symbols">
	<!ENTITY customsymbolsdir "custom-symbols">
	<!ENTITY dbsettings SYSTEM "include/dbsettings.inc">
	<!ENTITY extents SYSTEM "include/extents.inc">
	<!ENTITY extentsLatLon SYSTEM "include/extentsLatLon.inc">
	<!ENTITY rounded SYSTEM "include/rounded.inc">
	<!ENTITY highway-fill SYSTEM "include/highway-fill.inc">
	<!ENTITY aeroway SYSTEM "include/aeroway.inc">
	<!ENTITY nhd SYSTEM "include/nhd.inc">
	%utils;
	%colors;
]>

<Map background-color="transparent" srs="&srs900913;">

&nhd;

<Style name="nature-areas">
    <Rule>
      &minz7; &maxz9;
      <Filter>[way_area] &gt; 50000000</Filter>
      <PolygonSymbolizer
        fill="#170"
        fill-opacity="0.05" />
    </Rule>
    <Rule>
      <Filter>[way_area] &gt; 10000000</Filter>
      &minz10; &maxz11;
      <PolygonSymbolizer
        fill="#170"
        fill-opacity="0.05" />
    </Rule>

    <!-- High zoom: Outline large areas, shade small areas -->
    <!-- This is a workaround for the fact that some large areas,
    like some national parks, are just tagged as 'park' -->
    <Rule>
      <Filter>[way_area] &lt; 5000000</Filter>
      <PolygonSymbolizer
        fill="#170"
        fill-opacity="0.1" />
    </Rule>
</Style>

<Style name="misc-areas">

  <Rule>
      &minz10;
      <Filter>  
        [landuse] = 'cemetery' or
        [amenity] = 'grave_yard'
      </Filter>
      <PolygonSymbolizer fill="#8b8" fill-opacity="&areaopacity;" />
      <LineSymbolizer stroke="#8b8" stroke-width="1" />
  </Rule>
  <Rule>
      &minz10;
      <Filter>[landuse] = 'construction'</Filter>
      <PolygonSymbolizer fill="#bb3" fill-opacity="&areaopacity;" />
      <LineSymbolizer stroke="#bb3" stroke-width="1" />
  </Rule>
  <Rule>
      &minz10;
      <Filter>[natural] = 'beach'</Filter>
      <PolygonSymbolizer fill="#fec" fill-opacity="&areaopacity;" />
      <LineSymbolizer stroke="#fec" stroke-width="1" />
  </Rule>

</Style>

&highway-fill;
&aeroway;

<Style name="state-borders">	
	<Rule>
		&minz11;
		<Filter>[boundary] = 'administrative' and [admin_level] = '4'</Filter>
		<LineSymbolizer stroke="#825" stroke-width="8" stroke-opacity="0.5" />
	</Rule>
</Style>

<Style name="country-borders">	
	<Rule>
		&minz11;
		<Filter>[boundary] = 'administrative' and [admin_level] = '2'</Filter>
		<LineSymbolizer stroke="#880" stroke-width="12" stroke-opacity="0.5" />
	</Rule>
</Style>



<!-- Layers -->

<!-- NHD features at z1-9 -->
<Layer name="nhdarea-major-fill" status="on">
	<StyleName>water-fill-lowzoom</StyleName>
	<Datasource>
		&dbsettings; &extents;
		<Parameter name="table">(SELECT way, fcode, ftype, areasqkm as size FROM ${NHD_TABLE_PREFIX}_area_major) AS nhdarea</Parameter>
	</Datasource>
</Layer>
<Layer name="nhdwaterbody-major-fill" status="on">
	<StyleName>water-fill-lowzoom</StyleName>
	<Datasource>
		&dbsettings; &extents;
		<Parameter name="table">(SELECT way, fcode, ftype, areasqkm as size FROM ${NHD_TABLE_PREFIX}_waterbody_major) AS nhdwaterbody</Parameter>
	</Datasource>
</Layer>

<!-- NHD features at z10+ -->
<Layer name="nhdwaterbody-upper" status="on" srs="&srs900913;">
	<StyleName>water-fill</StyleName>
	<StyleName>ice</StyleName>
	<Datasource>
		&dbsettings; &extents;
		<Parameter name="table">(SELECT way, fcode, ftype, areasqkm FROM ${NHD_TABLE_PREFIX}_waterbody) AS nhdwaterbody</Parameter>
	</Datasource>
</Layer>
<Layer name="nhdarea-fill" status="on" srs="&srs900913;">
	<StyleName>water-fill</StyleName>
	<Datasource>
		&dbsettings; &extents;
		<Parameter name="table">(SELECT way, fcode, ftype, areasqkm FROM ${NHD_TABLE_PREFIX}_area) AS nhdarea</Parameter>
	</Datasource>
</Layer>

<Layer name="nature-areas" status="on">
  <StyleName>nature-areas</StyleName>
    <Datasource>
      &dbsettings; &extents;
      <Parameter name="table">
      (SELECT way, way_area, name, boundary, "natural" FROM ${DB_PREFIX}_polygon WHERE
      boundary='national_park' OR
      leisure IN ('park', 'nature_reserve', 'common', 'playground', 'garden', 'golf_course', 'recreation_ground') OR
      landuse IN ('forest', 'vineyard', 'conservation', 'recreation_ground', 'village_green', 'allotments') OR
      "natural" IN ('wood')
      ) AS areas
      </Parameter>
    </Datasource>
</Layer>

<Layer name="misc-areas" status="on">
  <StyleName>misc-areas</StyleName>
    <Datasource>
      &dbsettings; &extents;
      <Parameter name="table">
      (SELECT way, way_area, name, landuse, "natural", amenity
      FROM ${DB_PREFIX}_polygon
      WHERE landuse IS NOT NULL OR "natural" IS NOT NULL or amenity IS NOT NULL)
      AS areas
      </Parameter>
    </Datasource>
</Layer>



<!-- Roads at z9+ (all roads) -->
<Layer name="highway-highzoom" status="on">
    <StyleName>highway-highzoom-fill</StyleName>
    <Datasource>
        &dbsettings; &extents;
        <!--
        asciiphil: By default, osm2pgsql gives link roads the
        same z_order value as their corresponding main classification.
        This results in, e.g., motorway_link roads being rendered on
        top of everything else, which looks kind of bad,
        especially at high zoom levels.  This alters the rendering order
        so link roads are always rendered before any other roads,
        which makes the map look nicer.
        -->
        <Parameter name="table">
            (SELECT way, highway, bridge, tunnel, bicycle,
                    CASE WHEN bridge = 'yes' THEN UNNEST(ARRAY[1,2])
                        ELSE 2
                    END AS pass,
                    CASE WHEN highway LIKE '%_link' THEN true
                        ELSE false
                    END AS link
               FROM ${DB_PREFIX}_line
               WHERE highway IS NOT NULL
               ORDER BY FLOOR(z_order / 10.0), link DESC, z_order, pass) AS lines
        </Parameter>
    </Datasource>
</Layer>

<Layer name="parking-fill" status="on">
    <StyleName>parking-fill</StyleName>
    <Datasource>
		&dbsettings; &extents;
		<Parameter name="table">(SELECT way, amenity, access FROM ${DB_PREFIX}_polygon ORDER BY z_order, way_area DESC) AS parking</Parameter>
    </Datasource>
</Layer>


<Layer name="aeroway-line-fill" status="on">
    <StyleName>aeroway-fill</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, aeroway FROM ${DB_PREFIX}_line WHERE aeroway IS NOT NULL ORDER BY z_order) AS lines
      </Parameter>
    </Datasource>
</Layer>

<Layer name="aeroway-area-fill" status="on">
    <StyleName>aeroway-fill</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, aeroway FROM ${DB_PREFIX}_polygon WHERE aeroway IS NOT NULL ORDER BY z_order) AS areas
      </Parameter>
    </Datasource>
</Layer>

<Layer name="borders-level2-4" status="on">
	<StyleName>state-borders</StyleName>
	<StyleName>country-borders</StyleName>
	<Datasource>
		&dbsettings; &extents;
		<Parameter name="table">
		(SELECT way,boundary,admin_level FROM ${DB_PREFIX}_roads
        WHERE "boundary"='administrative' AND admin_level IN ('2','4'))
        AS borders
        </Parameter>
    </Datasource>
</Layer>

</Map>
